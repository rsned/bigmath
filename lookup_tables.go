package bigmath

import "math/big"

// Pre-computed high-precision arctan values
var (
	arctanLookupTable = []string{
		"0.7853981633974483096156608458198757210492923498437764552437361480769541015715522496570087063355292669955370694389073700362067", // atan(2^0)
		"0.4636476090008061162142562314612144020285370542861202638109330887201978641657417053006002839848804327933502230510518344098723", // atan(2^-1)
		"0.2449786631268641541720824812112758109141440307267528823809451346516946718169691734611355370174071547820932273415187839936847", // atan(2^-2)
		"0.1243549945467614350313548491638710255731702765559502772577059842711196848383764669459433952929825418679912155773719892604743", // atan(2^-3)
		"0.0624188099959573484739791129855051136687919047540705904015461636838263718152199793155049204524134906816509263493711329721113", // atan(2^-4)
		"0.0312398334302682762537117448924909770324131066571951244635329804963866547018551659736003854932725298761299",                   // atan(2^-5)
		"0.0156237286204768308028015212565703189111141398009450754106978380477956493655275901711159087936426613637346",                   // atan(2^-6)
		"0.0078123410601011112964633918421992816212652201190258816748258568121554133097203598014040734640050938140953",                   // atan(2^-7)
		"0.0039062301319669718276286653114348101799950684166486319990002081993024803973020825669715935102885655172031",                   // atan(2^-8)
		"0.0019531225164788186851214684502989851743705493692928293289745678114999638169808994007088754721906925754346",                   // atan(2^-9)
		"0.0009765621895593194304034301997172908516241831554346306442077012734904845522896089598073851969166570099993",                   // atan(2^-10)
		// computed with math.Atan
		"0.000488281211194898289926213941214427904924377799",
		"0.000244140620149361771244744812037197334575466812",
		"0.000122070311893670207853065945435844241728773341",
		"0.000061035156174208772593501454162279173942806665",
		"0.000030517578115526095727154734515984557674528332",
		"0.000015258789061315761542377868187347900175154791",
		"0.000007629394531101969981038996709843402754813724",
		"0.000003814697265606496141750756181942882960811403",
		"0.000001907348632810186964779285319349089178331269",
		"0.000000953674316405960844127631063221750551406330",
		"0.000000476837158203088842281064082054276020983252",
		"0.000000238418579101557973667688109832563103651637",
		"0.000000119209289550780680899738563516959688470820",
		"0.000000059604644775390552208106095333564611316035",
		"0.000000029802322387695302573832649363667901543096",
		"0.000000014901161193847654595638774893944650257183",
		"0.000000007450580596923828125000000000000000000000",
		"0.000000003725290298461914062500000000000000000000",
		"0.000000001862645149230957031250000000000000000000",
		"0.000000000931322574615478515625000000000000000000",
		"0.000000000465661287307739257812500000000000000000",
		"0.000000000232830643653869628906250000000000000000",
		"0.000000000116415321826934814453125000000000000000",
		"0.000000000058207660913467407226562500000000000000",
		"0.000000000029103830456733703613281250000000000000",
		"0.000000000014551915228366851806640625000000000000",
		"0.000000000007275957614183425903320312500000000000",
		"0.000000000003637978807091712951660156250000000000",
		"0.000000000001818989403545856475830078125000000000",
		"0.000000000000909494701772928237915039062500000000",
		"0.000000000000454747350886464118957519531250000000",
		"0.000000000000227373675443232059478759765625000000",
		"0.000000000000113686837721616029739379882812500000",
		"0.000000000000056843418860808014869689941406250000",
		"0.000000000000028421709430404007434844970703125000",
		"0.000000000000014210854715202003717422485351562500",
		"0.000000000000007105427357601001858711242675781250",
		"0.000000000000003552713678800500929355621337890625",
		"0.000000000000001776356839400250464677810668945312",
	}
)

// Bernoulli B2n numbers are used in some Taylor series expansions.
var (
	BernoulliNumbers = []big.Float{
		*big.NewFloat(1),                                                         // B(0)
		*big.NewFloat(1.0 / 2),                                                   // B(1)
		*big.NewFloat(1.0 / 6),                                                   // B(2)
		*big.NewFloat(-1.0 / 30),                                                 // B(4)
		*big.NewFloat(1.0 / 42),                                                  // B(6)
		*big.NewFloat(-1.0 / 30),                                                 // B(8)
		*big.NewFloat(5.0 / 66),                                                  // B(10)
		*big.NewFloat(-691.0 / 2730),                                             // B(12)
		*big.NewFloat(7.0 / 6),                                                   // B(14)
		*big.NewFloat(-3617.0 / 510),                                             // B(16)
		*big.NewFloat(43867.0 / 798),                                             // B(18)
		*big.NewFloat(-174611.0 / 330),                                           // B(20)
		*big.NewFloat(854513.0 / 138),                                            // B(22)
		*big.NewFloat(-236364091.0 / 2730),                                       // B(24)
		*big.NewFloat(8553103.0 / 6),                                             // B(26)
		*big.NewFloat(-23749461029.0 / 870),                                      // B(28)
		*big.NewFloat(8615841276005.0 / 14322),                                   // B(30)
		*big.NewFloat(-7709321041217.0 / 510),                                    // B(32)
		*big.NewFloat(2577687858367.0 / 6),                                       // B(34)
		*big.NewFloat(-26315271553053477373.0 / 1919190),                         // B(36)
		*big.NewFloat(2929993913841559.0 / 6),                                    // B(38)
		*big.NewFloat(-261082718496449122051.0 / 13530),                          // B(40)
		*big.NewFloat(1520097643918070802691.0 / 1806),                           // B(42)
		*big.NewFloat(-27833269579301024235023.0 / 690),                          // B(44)
		*big.NewFloat(596451111593912163277961.0 / 282),                          // B(46)
		*big.NewFloat(-5609403368997817686249127547.0 / 46410),                   // B(48)
		*big.NewFloat(495057205241079648212477525.0 / 66),                        // B(50)
		*big.NewFloat(-801165718135489957347924991853.0 / 1590),                  // B(52)
		*big.NewFloat(29149963634884862421418123812691.0 / 798),                  // B(54)
		*big.NewFloat(-2479392929313226753685415739663229.0 / 870),               // B(56)
		*big.NewFloat(84483613348880041862046775994036021.0 / 354),               // B(58)
		*big.NewFloat(-1215233140483755572040304994079820246041491.0 / 56786730), // B(60)
	}
)
